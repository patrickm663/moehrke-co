"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _ = require(".");

var _constants = require("../constants");

var _package = _interopRequireDefault(require("../package.json"));

const useTrackEvent = () => {
  const {
    setCookie,
    getCookie
  } = (0, _.useCookie)();
  const {
    shouldAskForFeedback,
    checkForFeedback
  } = (0, _.useFeedback)();

  const track = async ({
    eventType,
    orgId,
    siteId,
    buildId,
    name
  }) => {
    checkForFeedback();

    if (shouldAskForFeedback) {
      const interactions = isNaN(parseInt(getCookie(_constants.INTERACTION_COOKIE_NAME))) ? 0 : parseInt(getCookie(_constants.INTERACTION_COOKIE_NAME));
      setCookie(_constants.INTERACTION_COOKIE_NAME, interactions + 1);
    }

    if (process.env.GATSBY_TELEMETRY_API) {
      try {
        const body = {
          time: new Date(),
          eventType,
          componentId: `gatsby-plugin-gatsby-cloud_preview-indicator`,
          version: 1,
          componentVersion: _package.default.version,
          organizationId: orgId,
          siteId,
          buildId,
          name
        };
        await fetch(process.env.GATSBY_TELEMETRY_API, {
          mode: `cors`,
          method: `POST`,
          headers: {
            "Content-Type": `application/json`
          },
          body: JSON.stringify(body)
        });
      } catch (e) {
        console.log(e, e.message);
      }
    }
  };

  return {
    track
  };
};

var _default = useTrackEvent;
exports.default = _default;