"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _react = require("react");

var _dateFns = require("date-fns");

var _ = require(".");

var _constants = require("../constants");

var _indicatorContext = _interopRequireDefault(require("../context/indicatorContext"));

const useFeedback = () => {
  const {
    shouldAskForFeedback,
    setShouldAskForFeedback
  } = (0, _react.useContext)(_indicatorContext.default);
  const {
    cookies,
    getCookie
  } = (0, _.useCookie)();
  const checkForFeedback = (0, _react.useCallback)(() => {
    const lastFeedback = getCookie(_constants.FEEDBACK_COOKIE_NAME);

    if (lastFeedback) {
      const lastFeedbackDate = new Date(lastFeedback);
      const now = new Date();
      const diffInDays = (0, _dateFns.differenceInDays)(now, lastFeedbackDate);
      const askForFeedback = diffInDays >= _constants.DAYS_BEFORE_FEEDBACK;
      setShouldAskForFeedback(askForFeedback);
    } else {
      setShouldAskForFeedback(true);
    }
  }, []);
  const shouldShowFeedback = (0, _react.useMemo)(() => {
    const interactionCount = cookies[_constants.INTERACTION_COOKIE_NAME] ? parseInt(cookies[_constants.INTERACTION_COOKIE_NAME]) : 0;
    return shouldAskForFeedback && interactionCount > _constants.INTERACTIONS_BEFORE_FEEDBACK;
  }, [shouldAskForFeedback, cookies[_constants.INTERACTION_COOKIE_NAME]]);
  (0, _react.useEffect)(() => {
    checkForFeedback();
  }, []);
  return {
    shouldAskForFeedback,
    shouldShowFeedback,
    checkForFeedback
  };
};

var _default = useFeedback;
exports.default = _default;