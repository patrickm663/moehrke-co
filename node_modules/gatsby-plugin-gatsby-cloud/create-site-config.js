"use strict";

exports.__esModule = true;
exports.default = createSiteConfig;

var fs = _interopRequireWildcard(require("fs-extra"));

var _constants = require("./constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*
 *  @deprecated TODO(v5): Will be Remove in V5 since we're now sending config over IPC
 *  see https://github.com/gatsbyjs/gatsby/pull/34411
 */
async function createSiteConfig(pluginData, _pluginOptions) {
  const {
    publicFolder
  } = pluginData;
  const siteConfig = {
    pathPrefix: pluginData.pathPrefix ? pluginData.pathPrefix : null
  };
  return fs.writeJSON(publicFolder(_constants.SITE_CONFIG_FILENAME), siteConfig);
}