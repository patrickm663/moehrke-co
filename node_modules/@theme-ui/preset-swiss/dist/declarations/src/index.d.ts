export declare const swiss: {
    colors: {
        text: "hsl(10, 20%, 20%)";
        background: "hsl(10, 10%, 98%)";
        primary: "hsl(10, 80%, 50%)";
        secondary: "hsl(10, 60%, 50%)";
        highlight: "hsl(10, 40%, 90%)";
        purple: "hsl(250, 60%, 30%)";
        muted: "hsl(10, 20%, 94%)";
        gray: "hsl(10, 20%, 50%)";
    };
    fonts: {
        body: "system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif";
        heading: "inherit";
        monospace: "Menlo, monospace";
    };
    fontSizes: number[];
    fontWeights: {
        body: number;
        heading: number;
        display: number;
    };
    lineHeights: {
        body: number;
        heading: number;
    };
    text: {
        heading: {
            fontFamily: string;
            fontWeight: string;
            lineHeight: string;
        };
        display: {
            variant: string;
            fontSize: number[];
            fontWeight: string;
            letterSpacing: string;
            mt: number;
        };
    };
    styles: {
        readonly Container: {
            readonly p: 3;
            readonly maxWidth: 1024;
        };
        readonly root: {
            readonly fontFamily: "body";
            readonly lineHeight: "body";
            readonly fontWeight: "body";
        };
        readonly h1: {
            readonly variant: "text.display";
        };
        readonly h2: {
            readonly variant: "text.heading";
            readonly fontSize: 5;
        };
        readonly h3: {
            readonly variant: "text.heading";
            readonly fontSize: 4;
        };
        readonly h4: {
            readonly variant: "text.heading";
            readonly fontSize: 3;
        };
        readonly h5: {
            readonly variant: "text.heading";
            readonly fontSize: 2;
        };
        readonly h6: {
            readonly variant: "text.heading";
            readonly fontSize: 1;
        };
        readonly a: {
            readonly color: "primary";
            readonly '&:hover': {
                readonly color: "secondary";
            };
        };
        readonly pre: {
            readonly variant: "prism";
            readonly fontFamily: "monospace";
            readonly fontSize: 1;
            readonly p: 3;
            readonly color: "text";
            readonly bg: "muted";
            readonly overflow: "auto";
            readonly code: {
                readonly color: "inherit";
            };
        };
        readonly code: {
            readonly fontFamily: "monospace";
            readonly color: "secondary";
            readonly fontSize: 1;
        };
        readonly inlineCode: {
            readonly fontFamily: "monospace";
            readonly color: "secondary";
            readonly bg: "muted";
        };
        readonly table: {
            readonly width: "100%";
            readonly my: 4;
            readonly borderCollapse: "separate";
            readonly borderSpacing: 0;
            readonly 'th,td': {
                readonly textAlign: "left";
                readonly py: "4px";
                readonly pr: "4px";
                readonly pl: 0;
                readonly borderColor: "muted";
                readonly borderBottomStyle: "solid";
            };
        };
        readonly th: {
            readonly verticalAlign: "bottom";
            readonly borderBottomWidth: "2px";
        };
        readonly td: {
            readonly verticalAlign: "top";
            readonly borderBottomWidth: "1px";
        };
        readonly hr: {
            readonly border: 0;
            readonly borderBottom: "1px solid";
            readonly borderColor: "muted";
        };
        readonly img: {
            readonly maxWidth: "100%";
        };
    };
    prism: {
        '.comment,.prolog,.doctype,.cdata,.punctuation,.operator,.entity,.url': {
            color: string;
        };
        '.comment': {
            fontStyle: string;
        };
        '.property,.tag,.boolean,.number,.constant,.symbol,.deleted,.function,.class-name,.regex,.important,.variable': {
            color: string;
        };
        '.atrule,.attr-value,.keyword': {
            color: string;
        };
        '.selector,.attr-name,.string,.char,.builtin,.inserted': {
            color: string;
        };
    };
};
export default swiss;
