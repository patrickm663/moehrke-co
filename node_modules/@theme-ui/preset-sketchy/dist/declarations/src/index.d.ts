import { ThemeUIPresetSketchyVariants } from './variants';
declare const scalesAndStyles: {
    colors: {
        text: "#000200";
        background: "#FAFAF9";
        muted: "rgba(0,0,0,.1)";
        primary: "#F25F5C";
        primaryDark: "#B51916";
        primaryLight: "#FCBAB1";
        blue: "#B6DEE2";
        blueDark: "#247BA0";
        greenDark: "#2D5948";
        green: "#B2E4DC";
        yellowDark: "#FFDA3A";
        yellow: "#FCF5C7";
    };
    fonts: {
        body: "\"Architects Daughter\", system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif";
        heading: "inherit";
        monospace: "Menlo, monospace";
    };
    fontSizes: number[];
    sizes: {
        container: number;
    };
    lineHeights: {
        body: number;
        heading: number;
    };
    radii: {
        sketchy0: string;
        sketchy1: string;
        sketchy2: string;
        sketchy3: string;
        sketchy4: string;
        circle: string;
    };
    borders: {
        thick: "2px solid var(--theme-ui-colors-text, black)";
        thin: "1px solid var(--theme-ui-colors-text, black)";
    };
    shadows: {
        outline: "0 0 0px 1px black rgba(0,0,0,.4)";
        default: "15px 24px 25px -18px rgba(0,0,0,.4)";
        hover: "2px 8px 10px -6px rgba(0,0,0,.4)";
    };
    styles: {
        root: {
            fontFamily: "body";
            lineHeight: string;
        };
        a: {
            color: "primary";
            '&:hover': {
                color: "primaryDark";
            };
        };
        pre: {
            fontFamily: "monospace";
            fontSize: number;
            p: number;
            color: "text";
            bg: "muted";
            overflow: "auto";
        };
        code: {
            fontFamily: "monospace";
            fontSize: number;
        };
        inlineCode: {
            fontFamily: "monospace";
            color: "blueDark";
        };
        table: {
            borderCollapse: "separate";
            borderSpacing: number;
        };
        th: {
            border: string;
            borderRadius: string;
            borderBottomWidth: string;
            p: number;
        };
        td: {
            border: string;
            borderRadius: string;
            p: number;
        };
        hr: {
            border: number;
            borderBottom: string;
        };
        img: {
            maxWidth: string;
        };
    };
};
declare type ThemeUIPresetSketchyScalesAndStyles = typeof scalesAndStyles;
interface ThemeUIPresetSketchy extends ThemeUIPresetSketchyScalesAndStyles, ThemeUIPresetSketchyVariants {
}
declare const presetSketchy: ThemeUIPresetSketchy;
export default presetSketchy;
